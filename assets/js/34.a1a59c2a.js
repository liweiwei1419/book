(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{400:function(t,s,a){"use strict";a.r(s);var r=a(26),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"第-8-节-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第-8-节-总结"}},[t._v("#")]),t._v(" 第 8 节 总结")]),t._v(" "),a("p",[t._v("递归函数通过「栈」记录了我们在解决问题当中的一些信息，以方便我们简化逻辑，是「空间换时间」思想的体现。")]),t._v(" "),a("p",[t._v("要想深刻理解递归离不开大量的练习，我们在这里为大家准备了一些非常经典的使用递归实现的问题，但是我们还要提醒大家：递归只是手段。背后更深刻的「分而治之」的算法思想。因此，大家在做练习的时候一定要多思考当前要解决的问题，为什么可以用递归来解决，而不是仅仅只看它的表面。")]),t._v(" "),a("p",[t._v("另外，「递归」和「栈」「深度优先遍历」「分而治之」密不可分，这也是我们在本专题的一开始就和大家提及的事情，大家做完这些问题以后可以再回过头来想想是不是这么回事。")]),t._v(" "),a("p",[t._v("大家还可以自己找一些「深度优先遍历」「回溯算法」「分治算法」标签的问题做一下，重点掌握解决这些问题，我们所 "),a("strong",[t._v("设计的递归函数的语义")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"练习"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#练习"}},[t._v("#")]),t._v(" 练习")]),t._v(" "),a("ol",[a("li",[t._v("完成「力扣」第 10 题：正则表达式匹配（困难）；")]),t._v(" "),a("li",[t._v("完成「力扣」第 38 题：外观数列（中等）")])])])}),[],!1,null,null,null);s.default=e.exports}}]);